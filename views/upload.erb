<!DOCTYPE html>
<html>
<%= erb :_head, locals: { copy: @copy } %>
<% base_uri = '/upload' %>
<% base_uri += '/' + key.join('/') if key && !key.empty? %>
<body>
    <div id="page">
        <div class="upload-form">
            <form id="uploadForm" style="display: flex; flex-direction: column" enctype="multipart/form-data">
                <input class="mb" type="file" name="file" id="fileInput" required>
                <input type="submit" value="Upload File">
            </form>
        </div>
    </div>
</body>
<script>
    document.getElementById('uploadForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const fileInput = document.getElementById('fileInput');
        const file = fileInput.files[0];
        
        if (!file) {
            alert('Please select a file');
            return;
        }
        
        // Use just the directory path, not including filename
        const uploadUri = '<%= base_uri %>';
        
        // Create FormData
        const formData = new FormData();
        formData.append('file', file);
        
        // Upload the file
        fetch(uploadUri, {
            method: 'POST',
            body: formData
        })
        .then(response => {
            console.log('Response status:', response.status);
            console.log('Response headers:', response.headers.get('content-type'));
            
            // Check if response is actually JSON
            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
                return response.json();
            } else {
                // If not JSON, get text to see what's actually returned
                return response.text().then(text => {
                    console.log('Non-JSON response:', text);
                    throw new Error('Server returned non-JSON response: ' + text);
                });
            }
        })
        .then(data => {
            if (data.success) {
                // Redirect back or reload
                window.location.href = '/';
            } else {
                alert('Upload failed: ' + (data.error || 'Unknown error'));
            }
        })
        .catch(error => {
            console.error('Upload error:', error);
            alert('Upload failed: ' + error.message);
        });
    })
</script>
</html>