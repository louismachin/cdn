<div id="overlay" class="overlay" onclick="closeInfo()"></div>

<div id="info-pop-up" class="pop-up">
    <button class="close-btn" onclick="closeInfo()">Close</button>
    <div id="popup-content"></div>
</div>

<script>
    let currentUri = ''
    let data = {}

    let closeInfo = () => {
        document.getElementById('info-pop-up').classList.remove('show')
        document.getElementById('overlay').classList.remove('show')
    }

    let showInfo = (uri) => {
        currentUri = uri
        document.getElementById('info-pop-up').style.display = 'block'
        document.getElementById('overlay').style.display = 'block'
        
        fetch(uri)
            .then(response => response.json())
            .then(result => {
                data = {...result}
                renderTable()
            })
            .catch(error => {
                document.getElementById('popup-content').innerHTML = 'Error loading data'
            })
    }

    let renderTable = () => {
        let html = '<table class="kv-table">'
        
        for (let key in data) {
            html += `
                <tr>
                    <td><input type="text" value="${key}" onchange="updateKey('${key}', this.value)"></td>
                    <td><input type="text" value="${data[key]}" onchange="updateValue('${key}', this.value)"></td>
                    <td><button class="remove-btn" onclick="removeRow('${key}')">Ã—</button></td>
                </tr>
            `
        }
        
        html += `
            <tr>
                <td><input type="text" id="newKey" placeholder="key"></td>
                <td><input type="text" id="newValue" placeholder="value"></td>
                <td><button class="add-btn" onclick="addRow()">+</button></td>
            </tr>
        `
        
        html += '</table>';
        html += `
            <div class="actions">
                <button class="btn btn-primary" onclick="saveInfo()">Save</button>
                <button class="btn btn-secondary" onclick="closeInfo()">Cancel</button>
            </div>
            <div id="status" class="status"></div>
        `
        
        document.getElementById('popup-content').innerHTML = html
    }

    let updateKey = (oldKey, newKey) => {
        if (newKey && newKey !== oldKey) {
            data[newKey] = data[oldKey]
            delete data[oldKey]
            renderTable()
        }
    }

    let updateValue = (key, value) => {
        data[key] = value
    }

    let removeRow = (key) => {
        delete data[key]
        renderTable()
    }

    let addRow = () => {
        const key = document.getElementById('newKey').value
        const value = document.getElementById('newValue').value
        
        if (key) {
            data[key] = value
            renderTable()
        }
    }

    let saveInfo = () => {
        fetch(currentUri, {
            method: 'POST',
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify(data)
        })
        .then(response => {
            const status = document.getElementById('status')
            status.textContent = 'Saved!'
            status.className = 'status success'
            status.style.display = 'block'
            setTimeout(() => status.style.display = 'none', 2000)
        })
        .catch(error => {
            const status = document.getElementById('status')
            status.textContent = 'Error saving'
            status.className = 'status error'
            status.style.display = 'block'
        })
    }
</script>

<style>
    .kv-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

    .kv-table td {
        padding: 8px;
        border-bottom: 1px solid #eee;
    }

    .kv-table input {
        width: 100%;
        border: none;
        padding: 4px;
        font-size: 14px;
    }

    .kv-table input:focus {
        outline: 1px solid #007bff;
    }

    .remove-btn, .add-btn {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 18px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .remove-btn {
        color: #dc3545;
    }

    .remove-btn:hover {
        background-color: #ffe6e6;
    }

    .add-btn {
        color: #28a745;
    }

    .add-btn:hover {
        background-color: #e6ffe6;
    }

    .actions {
        display: flex;
        gap: 10px;
        justify-content: flex-end;
    }
</style>